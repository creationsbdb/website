{"version":3,"file":"static/webpack/static/development/pages/index.js.bbe082d10fb796975423.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import matter from 'gray-matter';\nimport Layout from '../components/Layout';\nimport Banner from '../components/Banner';\nimport CardList from '../components/CardList';\n\nconst Index = (props) => {\n  return (\n    <Layout\n      pathname=\"/\"\n      siteTitle={props.title}\n      siteDescription={props.description}\n      facebook={props.facebook}\n      instagram={props.instagram}\n      email={props.email}\n    >\n      <Banner></Banner>\n      <h4 className=\"subtitle\">{'DERNIÈRES CRÉATIONS'}</h4>\n      <CardList allCards={props.allProducts}></CardList>\n      <style jsx>{`\n        h4 {\n          letter-spacing: 0.2em;\n          font-size: 15px;\n          display: flex;\n          justify-content: center;\n          width: 100%;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\n// <section>\n// <BlogList allBlogs={props.allBlogs} />\n// </section>\nexport default Index;\n\nconst getDatas = (context) => {\n  const keys = context.keys();\n  const values = keys.map(context);\n\n  const data = keys.map((key, index) => {\n    // Create slug from filename\n    const slug = key\n      .replace(/^.*[\\\\\\/]/, '')\n      .split('.')\n      .slice(0, -1)\n      .join('.');\n    const value = values[index];\n    // Parse yaml metadata & markdownbody in document\n    const document = matter(value.default);\n    return {\n      frontmatter: document.data,\n      markdownBody: document.content,\n      slug,\n    };\n  });\n  return data;\n};\nexport async function getStaticProps() {\n  const siteConfig = await import(`../data/config.json`);\n  //get posts & context from folder\n  const posts = getDatas(require.context('../posts', true, /\\.md$/));\n  const products = getDatas(require.context('../products', true, /\\.md$/));\n  const compareProducts = (a, b) => {\n    const aDate = new Date(a.date) ?? new Date();\n    const bDate = new Date(b.date) ?? new Date();\n    if (aDate < bDate) return -1;\n    if (aDate > bDate) return 1;\n    // a doit être égal à b\n    return 0;\n  };\n\n  return {\n    props: {\n      allBlogs: posts,\n      allProducts: products.sort(compareProducts).slice(0, 6),\n      title: siteConfig.default.title,\n      description: siteConfig.default.description,\n      email: siteConfig.default.email,\n      facebook: siteConfig.default.facebook,\n      instagram: siteConfig.default.instagram,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAsBA;AAGA;AACA;AACA;AACA;;AADA;;;;A","sourceRoot":""}